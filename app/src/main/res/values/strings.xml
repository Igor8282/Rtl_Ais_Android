<resources>

    <string name="intent_filter_schema">NEMAsrc</string>


    <string name="app_name">Rtl_Ais_Driver</string>
    <string name="hello_world">Hello world!</string>
    <string name="action_settings">Settings</string>



    <string name="quickinfo">This application is a driver for RTL2832U based USB dongles. It is an android port of rtl_ais and rtl_tcp. You can use it to stream NEMA messages over the network or locally. It could also be automatically used by third party applications as a backend for SDR.</string>
    <string name="license">License</string>
    <string name="help">Help</string>
    <string name="stream">Start stream</string>
    <string name="kill">Kill</string>
    <string name="args_hint">rtl_ais_android command line arguments</string>
    <string name="default_args">-p 50 -P 10110 -h 192.168.2.5 -R  -x -S 60 </string>
    <string name="copy">Copy</string>
    <string name="copied_to_clip">Output was copied to clipboard</string>
    <string name="clear">Clear</string>
    <string name="force_root">Force root</string>

    <string name="error">Error</string>
    <string name="notsupported">The required action was not executed due to being not available.</string>

    <string name="use_root">Use root access</string>
    <string name="choose_device">Device Chooser</string>

    <string name="notif_title">rtl_ais_android is running</string>
    <string name="notif_message">There is an ongoing communication with an RTL2832U based USB dongle</string>

    <string name="btn_ok">OK</string>

	<string name="help_info"> <![CDATA[

	    <h2>What is that</h2>
	    <p>This application is a port of rtl_ais to the android platform. It allows other applications to start rtl_ais and use the decoded NEMA messages that it reads from
	    USB DVB-T dongles based on the RTL2832U chip</p>
	    <p>The application is based on the rtl_tcp_andro driver from Martin Marinov
	    <p>It also allows to stream over the network directly from the UI of the driver. This is an advanced feature and there could be bugs.</p>
		<h2>Usage</h2>
		<p>-l xxx left freq (default: 161.975 MHz )</p>
        <p>-r xxx right freq (default: 162.025 MHz )</p>
        <p>-s xxx sample rate ( default: 24000 )</p>
        <p>-o xxx output rate ( default: 48000 )</p>
        <p>-D     dc_filter off (default: on )</p>
        <p>-d xxx device index</p>
        <p>-g xxx gain</p>
        <p>-p xxx ppm error</p>
        <p>-R     Auto Gain ON (default: off )</p>
        <p>-A     Use internal aisdecoder ((default: on )</p>
        <p>-P xxx AIS Decoder output port</p>
        <p>-w xxx bandwith</p>
        <p>-h xxx AIS decoder host adr</p>
        <p>-n     Debug NEMA messages (default: off )</p>
        <p>-L     AIS show levels ON</p>
        <p>-S xxx AIS seconds for decoder statistic</p>
        <p>-x     Without TCP Comand thread</p>
        <p></p>
        <p>l:r:s:o:d:g:p:P:w:h:S:EODRAnLax</p>


		<h2>Notes and License</h2>
		<p>The app currently is experimental and could be unstable. Please, share your experience <a href="mailto:cebner@gmx.at">by sending me an email</a>.</p>
		<p>This app is open source and is licensed under GPL2+ as derivative work of rtl_ais rtl_tcp and rtl_tcp_andro. Its source code could be found on<p/>
		<p><a href="https://github.com/ebc81/Rtl_Ais_Android">https://github.com/ebc81/Rtl_Ais_Android</a></p>
		<p>For detailed information about the license, use the License button.</p>

	]]></string>

    <string name="warn_txt">The driver has been installed successfully! Please, launch your host application and it will trigger the driver automatically.</string>
    <string name="enable_gui">Enable advanced mode (for debug &amp; stream to PC)</string>





    <string name="exception_LIBUSB_GENERIC">libusb exception %s</string>
    <string name="exception_LIBUSB_ERROR_ACCESS">Cannot access device</string>
    <string name="exception_DEFAULT">Exception id %d</string>
    <string name="exception_OK">No exception :)</string>
    <string name="exception_WRONG_ARGS">Wrong start arguments were supplied! Please, check !</string>
    <string name="exception_INVALID_FD">Invalid USB file descriptor passed via Java.</string>
    <string name="exception_NO_DEVICES">No compatible devices found (make sure your USB device is connected, properly powered and your phone/tablet supports USB host mode). If you don\'t think your device supports root, make sure the force root option in the driver app is NOT enabled.</string>
    <string name="exception_FAILED_TO_OPEN_DEVICE">Device was found but cannot be open. This may indicate that your phone/tablet needs to be rooted. If it is rooted already, then make sure you have given SU permissions to the driver.</string>
    <string name="exception_CANNOT_RESTART">Internal error: Cannot restart service</string>
    <string name="exception_CANNOT_CLOSE">Internal error: Cannot stop service</string>
    <string name="exception_UNKNOWN">Unknown error!</string>
    <string name="exception_SIGNAL_CAUGHT">Signal was caught!</string>
    <string name="exception_NOT_ENOUGH_POWER">Your Android device does not provide enough power to the dongle. You must use an externally powered USB hub or an externally powered USB OTG cable.</string>
    <string name="exception_AIS_DECODER">Internal AIS decoder failed</string>
    <string name="rtl_ais_android_exec">rtl_ais</string>
    <string name="off">Kill</string>
    <string name="bt_default">Def</string>

</resources>
